generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model patient_billing {
  id              Int              @id @default(autoincrement())
  patient_id      Int?
  provider        String
  purpose         String
  amount          Decimal          @db.Decimal(10, 2)
  paid            Boolean?         @default(false)
  created_at      DateTime?        @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  system_patients system_patients? @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model patient_lab_results {
  id              Int              @id @default(autoincrement())
  patient_id      Int?
  condition       String
  date            DateTime         @db.Date
  diagnosis       String?
  created_at      DateTime?        @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  system_patients system_patients? @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model patient_rx {
  id              Int              @id @default(autoincrement())
  patient_id      Int?
  drug            String
  dosage          String
  date_issued     DateTime         @db.Date
  expiry_date     DateTime         @db.Date
  created_at      DateTime?        @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  system_patients system_patients? @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model system_patients {
  id                  Int                   @id @default(autoincrement())
  first_name          String
  last_name           String
  date_of_birth       DateTime              @db.Date
  patient_billing     patient_billing[]
  patient_lab_results patient_lab_results[]
  patient_rx          patient_rx[]
}
